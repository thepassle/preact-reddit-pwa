"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createWatchServedFilesMiddleware = createWatchServedFilesMiddleware;

var _utils = require("../utils/utils.js");

/**
 * @typedef {object} WatchServedFilesMiddlewareConfig
 * @property {string} rootDir
 * @property {import('chokidar').FSWatcher} fileWatcher
 */

/**
 * @param {import('koa').Context} ctx
 * @param {WatchServedFilesMiddlewareConfig} cfg
 */
async function watchServedFile(ctx, cfg) {
  const filePath = (0, _utils.getRequestFilePath)(ctx, cfg.rootDir);

  if (!filePath || (0, _utils.isGeneratedFile)(ctx.url)) {
    return;
  }

  cfg.fileWatcher.add(filePath);
}
/**
 * Sets up a middleware which tracks served files and sends a reload message to any
 * active browsers when any of the files change.
 *
 * @param {WatchServedFilesMiddlewareConfig} cfg
 */


function createWatchServedFilesMiddleware(cfg) {
  /** @type {import('koa').Middleware} */
  async function watchServedFilesMiddleware(ctx, next) {
    await next();
    watchServedFile(ctx, cfg);
  }

  return watchServedFilesMiddleware;
}